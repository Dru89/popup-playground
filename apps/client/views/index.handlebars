<div style="margin: 0 0 30px">
  <button style="padding:10px" id="show-popup">Show Popup</button>  
  <button style="padding:10px;display:none" id="toggle-url">Toggle URL</button>
</div>
<div>
  <label>
    <b>send to:</b>
    <select id="frames"></select>
    <br />
    <button id="ping">ping!</button>
  </label>
</div>
<div>
  <h2>messages:</h2>
  <pre id="messages"></pre>
</div>
<script id="config" type="application/json">{{{json config}}}</script>

<script type="text/javascript">
const config = JSON.parse(document.getElementById('config').textContent);
const showPopupButton = document.getElementById('show-popup');
const toggleUrlButton = document.getElementById('toggle-url');
const pingButton = document.getElementById('ping');
const framesSelect = document.getElementById('frames');
const messagePre = document.getElementById('messages');

const iframeUrl = new URL("/iframe", config.domains.iframe).toString();

const iframeOption = document.createElement('option');
iframeOption.value = "iframe";
iframeOption.textContent = iframeUrl.toString();
framesSelect.appendChild(iframeOption);

const iframeElem = document.createElement('iframe');
iframeElem.src = iframeUrl;
iframeElem.style = "width:100%;height:100vh";
document.body.appendChild(iframeElem);

let popup = {win: null, url: null};
function updatePopup(newWindow, url) {
  popup = {win: newWindow, url: url};

  toggleUrlButton.style.display = newWindow ? "initial" : "none";

  let option = framesSelect.querySelector("option[value=popup]");
  if (newWindow == null && option != null) {
    framesSelect.removeChild(option);
  } else if (newWindow != null) {
    if (option == null) {
      option = document.createElement('option');
      option.value = "popup";
      option.textContent = url.toString();
      framesSelect.appendChild(option);
    } else {
      option.textContent = url.toString();
    }
  }
}

function checkPopupClosed() {
  if (popup.win == null) return;
  if (popup.win.closed) {
    updatePopup(null);
  } else {
    setTimeout(checkPopupClosed, 250);
  }
}

showPopupButton.addEventListener('click', (e) => {
  e.preventDefault();
  if (popup.win == null) {
    const url = new URL("/popup", config.domains.popup);
    url.searchParams.set("headerDelay", "3000");
    console.log(url);
    const newWindow = window.open(url, "popup", "popup,width=800,height=600");
    updatePopup(newWindow, url);
    showPopupButton.textContent = "Close Popup";
    checkPopupClosed();

    setTimeout(() => {
      if (!newWindow.closed) {
        const newUrl = new URL(url);
        newUrl.searchParams.delete("headerDelay");
        newUrl.pathname = "/popup-bside";
        console.log(newUrl);
        newWindow.location.href = newUrl;
      }
    }, 1000);
  } else {
    popup.win.close();
    showPopupButton.textContent = "Show Popup";
  }
});

pingButton.addEventListener('click', (e) => {
  e.preventDefault();
  const selectedFrame = framesSelect.value;
  if (selectedFrame === "iframe") {
    iframeElem.contentWindow.postMessage("ping", config.domains.iframe);
  } else {
    if (popup.win == null) {
      throw new Error("can't post to popup. window is null");
    }
    popup.win.postmessage("ping", config.domains.popup);
  }
});
</script>